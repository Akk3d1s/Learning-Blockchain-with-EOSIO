//just a simple abstraction
function parseTokenString(tokenString) {
  const [amountString, symbol] = tokenString.split(" ")
  const amount = parseFloat(amountString)
  return { amount, symbol }
}

//updateTransferData is expect to take all of these as parameters, whether it uses them or not.
//see runUpdaters in AbstractActionHandler
function updateTransferData(state, payload, blockInfo, context) {
	//get the amount and symbol in the transfer.
	const { amount, symbol } = parseTokenString(payload.data.quantity)
  //if we haven't seen this symbol before, set it to the amount in the transfer.
	if (!state.volumeBySymbol[symbol]) {
    state.volumeBySymbol[symbol] = amount
	//otherwise increment it by this amount
  } else {
    state.volumeBySymbol[symbol] += amount
  }
	//increment the number of transfers we've seen by 1.
  state.totalTransfers += 1
}

const updaters = [
  {
		//what action does this updater act on?
    actionType: "eosio.token::transfer",
		//when we see this action, do this with it.
    updater: updateTransferData,
  },
]

module.exports = updaters
